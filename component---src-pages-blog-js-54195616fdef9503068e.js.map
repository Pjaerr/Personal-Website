{"version":3,"sources":["webpack:///./src/components/BlogPostLink/BlogPostLink.js","webpack:///./src/pages/blog.js"],"names":["BlogPostLink","post","className","to","frontmatter","path","title","date","description","Blog","Posts","data","allMarkdownRemark","edges","filter","edge","node","isHidden","map","key","id","Layout","activePage","lang","length","pageQuery"],"mappings":"+IAmBeA,G,OAdM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnB,yBAAKC,UAAU,qBACb,kBAAC,OAAD,CAAMA,UAAU,0BAA0BC,GAAIF,EAAKG,YAAYC,MAC7D,4BAAKJ,EAAKG,YAAYE,QAExB,uBAAGJ,UAAU,oCAAb,QACQ,IACN,0BAAMA,UAAU,0BAA0BD,EAAKG,YAAYG,OAE7D,uBAAGL,UAAU,iCACVD,EAAKG,YAAYI,gB,OCfxB,0CAkCeC,UAzBF,SAAC,GAIP,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QACC,SAAAC,GAAI,QAAMA,EAAKC,KAAKZ,YAAYG,OAASQ,EAAKC,KAAKZ,YAAYa,YAEhEC,KAAI,SAAAH,GAAI,OAAI,kBAAC,EAAD,CAAcI,IAAKJ,EAAKC,KAAKI,GAAInB,KAAMc,EAAKC,UAC3D,OACE,kBAACK,EAAA,EAAD,CAAQC,WAAW,QACjB,kBAAC,IAAD,CACEd,YAAY,oDACZe,KAAK,KACLjB,MAAM,SAER,wBAAIJ,UAAU,sBAAd,QACA,yBAAKA,UAAU,cACZQ,EAAMc,OAAS,EAAId,EAAQ,6BAnBpC,IA2Bae,EAAS","file":"component---src-pages-blog-js-54195616fdef9503068e.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport \"./BlogPostLink.scss\"\r\n\r\nconst BlogPostLink = ({ post }) => (\r\n  <div className=\"blog-post-preview\">\r\n    <Link className=\"blog-post-preview-title\" to={post.frontmatter.path}>\r\n      <h2>{post.frontmatter.title}</h2>\r\n    </Link>\r\n    <p className=\"blog-post-preview-date-container\">\r\n      Date:{\" \"}\r\n      <span className=\"blog-post-preview-date\">{post.frontmatter.date}</span>\r\n    </p>\r\n    <p className=\"blog-post-preview-description\">\r\n      {post.frontmatter.description}\r\n    </p>\r\n  </div>\r\n)\r\nexport default BlogPostLink\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport BlogPostLink from \"../components/BlogPostLink/BlogPostLink\"\r\n\r\nimport \"./blog.scss\"\r\n\r\nconst Blog = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n  const Posts = edges\r\n    .filter(\r\n      edge => !!edge.node.frontmatter.date && !edge.node.frontmatter.isHidden\r\n    )\r\n    .map(edge => <BlogPostLink key={edge.node.id} post={edge.node} />)\r\n  return (\r\n    <Layout activePage=\"Blog\">\r\n      <SEO\r\n        description=\"Personal Site and Blog for Josh Jackson - @Pjaerr\"\r\n        lang=\"en\"\r\n        title=\"Blog\"\r\n      />\r\n      <h1 className=\"blog-listing-title\">Blog</h1>\r\n      <div className=\"blog-posts\">\r\n        {Posts.length > 0 ? Posts : \"ðŸ™ƒ No blog posts found!\"}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            isHidden\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}