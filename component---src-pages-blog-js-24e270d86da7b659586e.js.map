{"version":3,"sources":["webpack:///./src/styles/HomepageTitle.js","webpack:///./src/components/BlogpostLink/BlogpostLink.js","webpack:///./src/pages/blog.js"],"names":["HomepageTitle","styled","h1","headingFontSize","small","breakpoints","Container","div","medium","animationSpeed","BlogpostLink","title","date","description","href","pageQuery","BlogPage","blogposts","data","allMdx","edges","filter","edge","node","frontmatter","isHidden","map","key","id","path","lang","image"],"mappings":"mIAIMA,EAAgBC,IAAOC,GAAV,gEAAGD,CAAH,6KAGJE,IAAgBC,MAKRC,IAAYD,OAKpBJ,O,kCCjBf,iDAKMM,EAAYL,IAAOM,IAAV,0EAAGN,CAAH,6MAQEE,IAAgBK,OACTC,KAyBTC,IAZM,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAChD,OACE,kBAACR,EAAD,KACE,uBAAGQ,KAAMA,GACP,4BAAKH,IAEP,2BAAIC,GACJ,2BAAIC,M,8LCrBJP,EAAYL,IAAOM,IAAV,kEAAGN,CAAH,oKAOQI,IAAYD,MAKlBD,IAAgBK,QAuCpBO,EAAS,YAmBPC,UAtDE,SAAC,GAIX,IACCC,EADF,EAHJC,KACEC,OAAUC,MAITC,QACC,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYZ,OAASU,EAAKC,KAAKC,YAAYC,YAEhEC,KAAI,SAAAJ,GAAI,OACP,kBAAC,IAAD,CACEK,IAAKL,EAAKC,KAAKK,GACfjB,MAAOW,EAAKC,KAAKC,YAAYb,MAC7BC,KAAMU,EAAKC,KAAKC,YAAYZ,KAC5BC,YAAaS,EAAKC,KAAKC,YAAYX,YACnCC,KAAMQ,EAAKC,KAAKC,YAAYK,UAIlC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,KACLnB,MAAM,OACNoB,MAAM,UACNlB,YAAY,kCAEd,kBAACP,EAAD,KACE,kBAAC,IAAD,sBACCW","file":"component---src-pages-blog-js-24e270d86da7b659586e.js","sourcesContent":["import styled from \"styled-components\";\n\nimport { headingFontSize, breakpoints } from \"../constants\";\n\nconst HomepageTitle = styled.h1`\n  font-weight: bold;\n  margin-bottom: -20px;\n  font-size: ${headingFontSize.small};\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  color: var(--colour-highlight);\n\n  @media (min-width: ${breakpoints.small}) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport default HomepageTitle;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport { animationSpeed, headingFontSize } from \"../../constants\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 680px;\n  min-height: 200px;\n\n  h1 {\n    font-size: ${headingFontSize.medium};\n    transition: color ${animationSpeed} ease;\n\n    &:hover {\n      color: var(--colour-highlight);\n    }\n  }\n\n  p {\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst BlogpostLink = ({ title, date, description, href }) => {\n  return (\n    <Container>\n      <a href={href}>\n        <h1>{title}</h1>\n      </a>\n      <p>{date}</p>\n      <p>{description}</p>\n    </Container>\n  );\n};\n\nexport default BlogpostLink;\n","import React from \"react\";\n\n//Components\nimport { Layout } from \"../components/Layout/Layout\";\nimport SEO from \"../components/seo\";\n\nimport BlogpostLink from \"../components/BlogpostLink/BlogpostLink\";\n\n//Styles\nimport styled from \"styled-components\";\nimport { headingFontSize, breakpoints } from \"../constants\";\nimport HomepageTitle from \"../styles/HomepageTitle\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-row-gap: 60px;\n  grid-template-rows: auto;\n  justify-content: center;\n  align-content: center;\n\n  @media (min-width: ${breakpoints.small}) {\n    grid-row-gap: 15px;\n  }\n\n  h1 {\n    font-size: ${headingFontSize.medium};\n  }\n`;\n\nconst BlogPage = ({\n  data: {\n    allMdx: { edges },\n  },\n}) => {\n  const blogposts = edges\n    .filter(\n      edge => !!edge.node.frontmatter.date && !edge.node.frontmatter.isHidden\n    )\n    .map(edge => (\n      <BlogpostLink\n        key={edge.node.id}\n        title={edge.node.frontmatter.title}\n        date={edge.node.frontmatter.date}\n        description={edge.node.frontmatter.description}\n        href={edge.node.frontmatter.path}\n      />\n    ));\n\n  return (\n    <Layout>\n      <SEO\n        lang=\"en\"\n        title=\"Blog\"\n        image=\"/me.jpg\"\n        description=\"Blog | Josh Jackson - @Pjaerr\"\n      />\n      <Container>\n        <HomepageTitle>All Blogposts</HomepageTitle>\n        {blogposts}\n      </Container>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            isHidden\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"sourceRoot":""}