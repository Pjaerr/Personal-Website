{"version":3,"sources":["webpack:///./src/components/ScrollProgressBar/ScrollProgressBar.js","webpack:///./src/components/BlogPostAuthor/BlogPostAuthor.js","webpack:///./src/templates/BlogPostTemplate.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["ScrollProgressBar","width","className","style","BlogPostAuthor","to","href","target","rel","Template","mdx","data","frontmatter","body","useState","scrollPos","setScrollPos","adjustScrollPosition","windowScroll","document","top","documentElement","scrollTop","height","scrollHeight","clientHeight","useEffect","window","addEventListener","removeEventListener","Layout","description","lang","title","name","twitterUsername","imgSrc","pageQuery","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"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","file":"component---src-templates-blog-post-template-js-6a0824bbbd0ccf4d66e6.js","sourcesContent":["import React from \"react\"\r\n\r\nimport \"./ScrollProgressBar.scss\"\r\n\r\nconst ScrollProgressBar = ({ width }) => {\r\n  return (\r\n    <div className=\"scroll-progress\">\r\n      <div\r\n        className=\"scroll-progress-bar\"\r\n        style={{\r\n          width: width + \"%\",\r\n        }}\r\n      ></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScrollProgressBar\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport \"./BlogPostAuthor.scss\"\r\n\r\nconst BlogPostAuthor = () => {\r\n  return (\r\n    <aside className=\"blog-post-author\">\r\n      <div className=\"blog-post-author-content\">\r\n        <h1>\r\n          If you enjoyed this post you can read my other blog posts{\" \"}\r\n          <Link to=\"/blog\">here</Link> or follow me on twitter{\" \"}\r\n          <a\r\n            href=\"https://twitter.com/Pjaerr\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            @Pjaerr\r\n          </a>\r\n        </h1>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default BlogPostAuthor\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\n\r\nimport Layout from \"../components/Layout/Layout\"\r\nimport ScrollProgressBar from \"../components/ScrollProgressBar/ScrollProgressBar\"\r\n\r\nimport \"./BlogPostTemplate.scss\"\r\nimport BlogPostAuthor from \"../components/BlogPostAuthor/BlogPostAuthor\"\r\nimport SEO from \"../components/seo\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { mdx } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, body } = mdx\r\n\r\n  const [scrollPos, setScrollPos] = useState(0)\r\n\r\n  const adjustScrollPosition = () => {\r\n    const windowScroll = document.body.top || document.documentElement.scrollTop\r\n\r\n    const height =\r\n      document.documentElement.scrollHeight -\r\n      document.documentElement.clientHeight\r\n\r\n    setScrollPos((windowScroll / height) * 100)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", adjustScrollPosition)\r\n    return () => window.removeEventListener(\"scroll\", adjustScrollPosition)\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        description={frontmatter.description}\r\n        lang=\"en\"\r\n        title={frontmatter.title}\r\n      />\r\n      <div>\r\n        <ScrollProgressBar width={scrollPos} />\r\n        <div className=\"blog-post\">\r\n          <article className=\"blog-post-container\">\r\n            <h1 className=\"sub-page-title\">{frontmatter.title}</h1>\r\n            <section className=\"blog-post-content\">\r\n              <MDXRenderer>{body}</MDXRenderer>\r\n            </section>\r\n            <BlogPostAuthor\r\n              name=\"Josh Jackson\"\r\n              twitterUsername=\"Pjaerr\"\r\n              imgSrc=\"/me.jpg\"\r\n            />\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    mdx(frontmatter: { path: { eq: $path } }) {\r\n      body\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}